<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.wechat.mapper.GroupMessageMapper">
    
	<sql id="groupMessageColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.group_id AS "groupId",
		a.content AS "content",
		a.is_del AS "isDel",
		a.is_read AS "isRead",
		a.send_time AS "sendTime",
		a.is_back AS "isBack",
		a.remark1 AS "remark1",
		a.remark2 AS "remark2",
		a.remark3 AS "remark3"
	</sql>
	
	<sql id="groupMessageJoins">
		
		LEFT JOIN sys_user userId ON userId.id = a.user_id
	</sql>
	
    
	<select id="get" resultType="GroupMessage" >
		SELECT 
			<include refid="groupMessageColumns"/>
		FROM group_message a
		<include refid="groupMessageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GroupMessage" >
		SELECT 
			<include refid="groupMessageColumns"/>
		FROM group_message a
		<include refid="groupMessageJoins"/>
		<where>
			
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GroupMessage" >
		SELECT 
			<include refid="groupMessageColumns"/>
		FROM group_message a
		<include refid="groupMessageJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO group_message(
			id,
			user_id,
			group_id,
			content,
			is_del,
			is_read,
			send_time,
			is_back,
			remark1,
			remark2,
			remark3
		) VALUES (
			#{id},
			#{userId},
			#{groupId},
			#{content},
			#{isDel},
			#{isRead},
			#{sendTime},
			#{isBack},
			#{remark1},
			#{remark2},
			#{remark3}
		)
	</insert>
	
	<update id="update">
		UPDATE group_message SET 	
			user_id = #{userId},
			group_id = #{groupId},
			content = #{content},
			is_del = #{isDel},
			is_read = #{isRead},
			send_time = #{sendTime},
			is_back = #{isBack},
			remark1 = #{remark1},
			remark2 = #{remark2},
			remark3 = #{remark3}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM group_message
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE group_message SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="GroupMessage" statementType="STATEMENT">
		select * FROM group_message  where ${propertyName} = '${value}'
	</select>
	
	

	
</mapper>