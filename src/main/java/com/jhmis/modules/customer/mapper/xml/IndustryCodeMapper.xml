<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.customer.mapper.IndustryCodeMapper">
    
	<sql id="industryCodeColumns">
		a.code AS "code",
		a.name AS "name",
		a.parent_code AS "parentCode",
		a.level AS "level",
		a.type_desc AS "typeDesc",
		a.order_number AS "orderNumber"
	</sql>
	
	<sql id="industryCodeJoins">
		
	</sql>
	
    
	<select id="get" resultType="IndustryCode" >
		SELECT 
			<include refid="industryCodeColumns"/>
		FROM industry_code a
		<include refid="industryCodeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="IndustryCode" >
		SELECT 
			<include refid="industryCodeColumns"/>
		FROM industry_code a
		<include refid="industryCodeJoins"/>
		<where>
			
			${dataScope}
			<if test="code != null and code != ''">
				AND a.code = #{code}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="parentCode != null and parentCode != ''">
				AND a.parent_code = #{parentCode}
			</if>
			<if test="level != null and level != ''">
				AND a.level = #{level}
			</if>
			<if test="typeDesc != null and typeDesc != ''">
				AND a.type_desc = #{typeDesc}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="IndustryCode" >
		SELECT 
			<include refid="industryCodeColumns"/>
		FROM industry_code a
		<include refid="industryCodeJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO industry_code(
			code,
			name,
			parent_code,
			level,
			type_desc,
			order_number
		) VALUES (
			#{code},
			#{name},
			#{parentCode},
			#{level},
			#{typeDesc},
			#{orderNumber}
		)
	</insert>
	
	<update id="update">
		UPDATE industry_code SET 	
			code = #{code},
			name = #{name},
			parent_code = #{parentCode},
			level = #{level},
			type_desc = #{typeDesc},
			order_number = #{orderNumber}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM industry_code
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE industry_code SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="IndustryCode" statementType="STATEMENT">
		select * FROM industry_code  where ${propertyName} = '${value}'
	</select>
	
</mapper>