<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.process.mapper.shophicback.ShopHicbackpassLogMapper">
    
	<sql id="shopHicbackpassLogColumns">
		a.id AS "id",
		a.backid AS "backid",
		a.bindmoney AS "bindmoney",
		a.bindtime AS "bindtime",
		a.cancelfalg AS "cancelfalg",
		a.cjmoney AS "cjmoney",
		a.state AS "state",
		a.zbtime AS "zbtime",
		a.memo AS "memo"
	</sql>
	
	<sql id="shopHicbackpassLogJoins">
		
	</sql>
	
    
	<select id="get" resultType="ShopHicbackpassLog" >
		SELECT 
			<include refid="shopHicbackpassLogColumns"/>
		FROM shop_hicbackpass_log a
		<include refid="shopHicbackpassLogJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ShopHicbackpassLog" >
		SELECT 
			<include refid="shopHicbackpassLogColumns"/>
		FROM shop_hicbackpass_log a
		<include refid="shopHicbackpassLogJoins"/>
		<where>
			
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ShopHicbackpassLog" >
		SELECT 
			<include refid="shopHicbackpassLogColumns"/>
		FROM shop_hicbackpass_log a
		<include refid="shopHicbackpassLogJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO shop_hicbackpass_log(
			backid,
			bindmoney,
			bindtime,
			cancelfalg,
			cjmoney,
			state,
			zbtime,
			memo
		) VALUES (
			#{backid},
			#{bindmoney},
			#{bindtime},
			#{cancelfalg},
			#{cjmoney},
			#{state},
			#{zbtime},
			#{memo}
		)
	</insert>
	
	<update id="update">
		UPDATE shop_hicbackpass_log SET 	
			backid = #{backid},
			bindmoney = #{bindmoney},
			bindtime = #{bindtime},
			cancelfalg = #{cancelfalg},
			cjmoney = #{cjmoney},
			state = #{state},
			zbtime = #{zbtime},
			memo = #{memo}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM shop_hicbackpass_log
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE shop_hicbackpass_log SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ShopHicbackpassLog" statementType="STATEMENT">
		select * FROM shop_hicbackpass_log  where ${propertyName} = '${value}'
	</select>
	
</mapper>