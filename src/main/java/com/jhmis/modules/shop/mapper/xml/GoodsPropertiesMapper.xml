<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.shop.mapper.GoodsPropertiesMapper">
    
	<sql id="goodsPropertiesColumns">
		a.goods_code AS "goodsCode",
		a.tag AS "tag",
		a.name AS "name",
		a.value AS "value",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="goodsPropertiesJoins">
		
	</sql>
	
    
	<select id="get" resultType="GoodsProperties" >
		SELECT 
			<include refid="goodsPropertiesColumns"/>
		FROM goods_properties a
		<include refid="goodsPropertiesJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsProperties" >
		SELECT 
			<include refid="goodsPropertiesColumns"/>
		FROM goods_properties a
		<include refid="goodsPropertiesJoins"/>
		<where>
			
			${dataScope}
			<if test="tag != null and tag != ''">
				AND a.tag = #{tag}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="value != null and value != ''">
				AND a.value = #{value}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GoodsProperties" >
		SELECT 
			<include refid="goodsPropertiesColumns"/>
		FROM goods_properties a
		<include refid="goodsPropertiesJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO goods_properties(
			goods_code,
			tag,
			name,
			value,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{goodsCode},
			#{tag},
			#{name},
			#{value},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE goods_properties SET 	
			goods_code = #{goodsCode},
			tag = #{tag},
			name = #{name},
			value = #{value},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM goods_properties
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE goods_properties SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="GoodsProperties" statementType="STATEMENT">
		select * FROM goods_properties  where ${propertyName} = '${value}'
	</select>
	
</mapper>