<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.shop.mapper.TrancheProductMapper">
    
	<sql id="trancheProductColumns">
		a.product_code AS "productCode",
		a.product_ischeck AS "productIscheck",
		a.remark AS "remark"
	</sql>
	
	<sql id="trancheProductJoins">
		
	</sql>
	
    
	<select id="get" resultType="TrancheProduct" >
		SELECT 
			<include refid="trancheProductColumns"/>
		FROM tranche_product a
		<include refid="trancheProductJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TrancheProduct" >
		SELECT 
			<include refid="trancheProductColumns"/>
		FROM tranche_product a
		<include refid="trancheProductJoins"/>
		<where>
			
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TrancheProduct" >
		SELECT 
			<include refid="trancheProductColumns"/>
		FROM tranche_product a
		<include refid="trancheProductJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tranche_product(
			product_code,
			product_ischeck,
			remark
		) VALUES (
			#{productCode},
			#{productIscheck},
			#{remark}
		)
	</insert>
	
	<update id="update">
		UPDATE tranche_product SET 	
			product_code = #{productCode},
			product_ischeck = #{productIscheck},
			remark = #{remark}
		WHERE product_code = #{productCode}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM tranche_product
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE tranche_product SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="TrancheProduct" statementType="STATEMENT">
		select * FROM tranche_product  where ${propertyName} = '${value}'
	</select>
	
</mapper>