<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhmis.modules.shop.mapper.GoodsCategoryMapper">

    <resultMap id="goodsCategoryResult" type="GoodsCategory">
   		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sort" column="sort" />
		<result property="parentIds" column="parentIds" />
		<result property="iconUrl" column="iconUrl" />
		<result property="classId" column="classId" />
		<result property="isShow" column="is_show" />
		<result property="pageMark" column="page_mark" />
		<result property="classTemplate" column="class_template" />
		<result property="goodsTemplate" column="goods_template" />
		<result property="pageUrl" column="page_url" />
		
		<association property="hasChildren" column="id" select="hasChildren" />
    </resultMap>
    
	<sql id="goodsCategoryColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.icon_url AS "iconUrl",
		a.class_id AS "classId",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.page_url AS "pageUrl",
		a.goods_template AS "goodsTemplate",
		a.class_template AS "classTemplate",
		a.page_mark AS "pageMark",
		a.is_show AS "isShow"
	</sql>
	

	

	<sql id="goodsCategoryJoins">
		
	</sql>
	

    
	<select id="get" resultType="GoodsCategory">
		SELECT 
			<include refid="goodsCategoryColumns"/>
		FROM goods_category a
		<include refid="goodsCategoryJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsCategory">
		SELECT 
			<include refid="goodsCategoryColumns"/>
		FROM goods_category a
		<include refid="goodsCategoryJoins"/>
		<where>
			
			${dataScope}
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
		    <if test="pageMark != null and pageMark != ''">
				AND a.page_mark = #{pageMark}
			</if>
			<if test="isShow != null and isShow != ''">
				AND a.is_show = #{isShow}
			</if>
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="repeatName != null and repeatName != ''">
				AND a.name = #{repeatName}
			</if>
			<if test="classId != null and classId != ''">
				AND a.class_id = #{classId}
			</if>
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findAllList" resultType="GoodsCategory">
		SELECT 
			<include refid="goodsCategoryColumns"/>
		FROM goods_category a
		<include refid="goodsCategoryJoins"/>
		<where>
			
			${dataScope}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="getChildren" parameterType="String" resultMap="goodsCategoryResult">  
        select * from goods_category where parent_id = #{id} ORDER BY sort 
    </select> 
     
    <select id="hasChildren" parameterType="String" resultType="Boolean">  
         select case when exists(select 1 from goods_category where parent_id = #{id}) then 1 else 0 end ${dual}
    </select>
    
	<select id="findByParentIdsLike" resultType="GoodsCategory">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM goods_category a
		<include refid="goodsCategoryJoins"/>
		<where>
			
			AND a.parent_ids LIKE #{parentIds}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<insert id="insert">
		INSERT INTO goods_category(
			id,
			parent_id,
			parent_ids,
			name,
			icon_url,
			class_id,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			page_url,
			goods_template,
			class_template,
			page_mark,
			is_show
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{name},
			#{iconUrl},
			#{classId},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{pageUrl},
			#{goodsTemplate},
			#{classTemplate},
			#{pageMark},
			#{isShow}
		)
	</insert>

	<update id="updatecategoryurl">
		UPDATE goods_category SET

			page_url= #{pageUrl}

			WHERE id = #{id}
	</update>


	<update id="update">
		UPDATE goods_category SET 	
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			icon_url = #{iconUrl},
			class_id = #{classId},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			page_url= #{pageUrl},
			goods_template = #{goodsTemplate},
			class_template = #{classTemplate},
			page_mark = #{pageMark},
			is_show = #{isShow}
			WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE goods_category SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM goods_category
		WHERE id = #{id} OR parent_ids LIKE 
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE goods_category SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	<select id="findStoreAllCat" parameterType="String" resultType="GoodsCategory">
		SELECT
			*
		FROM
			(
				SELECT
					category_pid
				FROM
					store_goods
					<where>
						and store_id = #{arg0}
					</where>
				GROUP BY
					category_pid

			) c
		LEFT JOIN goods_category gc on c.category_pid = gc.id
	</select>

<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="GoodsCategory" statementType="STATEMENT">
		select * FROM goods_category  where ${propertyName} = '${value}'
	</select>

</mapper>