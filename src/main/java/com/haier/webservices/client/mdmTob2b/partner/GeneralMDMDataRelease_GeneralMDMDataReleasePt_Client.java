
package com.haier.webservices.client.mdmTob2b.partner;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.8
 * 2019-10-12T14:54:29.897+08:00
 * Generated source version: 3.2.8
 *
 */
public final class GeneralMDMDataRelease_GeneralMDMDataReleasePt_Client {

    private static final QName SERVICE_NAME = new QName("http://xmlns.oracle.com/Interface/GeneralMDMDataRelease/GeneralMDMDataRelease", "generalmdmdatarelease_client_ep");

    private GeneralMDMDataRelease_GeneralMDMDataReleasePt_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = GeneralmdmdatareleaseClientEp.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        GeneralmdmdatareleaseClientEp ss = new GeneralmdmdatareleaseClientEp(wsdlURL, SERVICE_NAME);
        GeneralMDMDataRelease port = ss.getGeneralMDMDataReleasePt();

        {
        System.out.println("Invoking process...");
        java.lang.String _process_inSYSNAME = "";
        java.lang.String _process_inMASTERTYPE = "";
        java.lang.String _process_inTABLENAME = "";
        java.lang.String _process_inSTARTDATE = "";
        java.lang.String _process_inENDDATE = "";
        java.lang.String _process_inPAGE = "";
        java.lang.String _process_inBATCHID = "";
        javax.xml.ws.Holder<java.lang.String> _process_outPAGE = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outRESULT = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outRETCODE = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outALLNUM = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outPAGECON = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outALLCOUNT = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outRETMSG = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _process_outBATCHID = new javax.xml.ws.Holder<java.lang.String>();
        port.process(_process_inSYSNAME, _process_inMASTERTYPE, _process_inTABLENAME, _process_inSTARTDATE, _process_inENDDATE, _process_inPAGE, _process_inBATCHID, _process_outPAGE, _process_outRESULT, _process_outRETCODE, _process_outALLNUM, _process_outPAGECON, _process_outALLCOUNT, _process_outRETMSG, _process_outBATCHID);

        System.out.println("process._process_outPAGE=" + _process_outPAGE.value);
        System.out.println("process._process_outRESULT=" + _process_outRESULT.value);
        System.out.println("process._process_outRETCODE=" + _process_outRETCODE.value);
        System.out.println("process._process_outALLNUM=" + _process_outALLNUM.value);
        System.out.println("process._process_outPAGECON=" + _process_outPAGECON.value);
        System.out.println("process._process_outALLCOUNT=" + _process_outALLCOUNT.value);
        System.out.println("process._process_outRETMSG=" + _process_outRETMSG.value);
        System.out.println("process._process_outBATCHID=" + _process_outBATCHID.value);

        }

        System.exit(0);
    }

}
